[CRAB]

jobtype = cmssw
scheduler = condor 

#scheduler = remoteGlideIn
#use_server = 0

[CMSSW]
#pycfg_params = noprint
#pycfg_params = useData=1 

### DCSOnly
#lumi_mask=/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions12/8TeV/DCSOnly/json_DCSONLY.txt

# Use any two of these 
total_number_of_lumis = -1
#lumis_per_job = 1 
number_of_jobs = 300 
#total_number_of_events = -1
#events_per_job = 10000 

### The data you want to access (to be found on DBS)
#datasetpath= 
#dbs_url = http://cmsdbsprod.cern.ch/cms_dbs_ph_analysis_01/servlet/DBSServlet

### The ParameterSet you want to use
#pset=pythia.cfg
pset=bprimetobh_cfg.py

### Splitting parameters
#total_number_of_events=-1
#events_per_job = 150000

### The output files (comma separated list)
output_file = BprimeTobH_v1.root

[USER]

### OUTPUT files Management
##  output back into UI
return_data = 0

### To use a specific name of UI directory where CRAB will create job to submit (with full path).
### the default directory will be "crab_0_data_time"
#ui_working_dir = /full/path/Name_of_Directory

### To specify the UI directory where to store the CMS executable output
### FULL path is mandatory. Default is  <ui_working_dir>/res will be used.
#outputdir= /full/path/yourOutDir

### To specify the UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
### FULL path is mandatory. Default is <ui_working_dir>/res will be used.
#logdir= /full/path/yourLogDir

### OUTPUT files INTO A SE
copy_data = 1

### if you want to copy data in a "official CMS site"
### you have to specify the name as written in 
#storage_element = T2_IT_Bari
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = MultiJet_Run2012D-PromptReco-v1_208552-208686 

#storage_element = T2_TW_Taiwan
#user_remote_dir = tWtW_m500_7TeV

### if you want to copy your data at CAF
#storage_element = T2_CH_CAF
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = MultiJet_Run2012D-PromptReco-v1_208552-208686 
#storage_element = T3_TW_NTU_HEP

#storage_element = T2_CH_CERN 
#user_remote_dir =  

storage_element = cmssrm.fnal.gov
storage_path = /srm/managerv2?SFN=11
user_remote_dir = /store/user/devdatta/NtuplesBprimeTobH_v1
check_user_remote_dir = 1

### if you want to copy your data to your area in castor at cern
### or in a "not official CMS site" you have to specify the complete name of SE
#storage_element=srm-cms.cern.ch
### this directory is the mountpoin of SE 
#storage_path=/srm/managerv2?SFN=/castor/cern.ch/
### directory or tree of directory under the mounpoint 
#user_remote_dir = /USERID/castor_folder/MultiJet_Run2012D-PromptReco-v1_208552-208686 

### To publish produced output in a local istance of DBS set publish_data = 1
publish_data=0
### Specify the dataset name. The full path will be <primarydataset>/<publish_data_name>/USER
#publish_data_name = 
### Specify the URL of DBS istance where CRAB has to publish the output files
#dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_caf_analysis_01_writer/servlet/DBSServlet 
#dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_ph_analysis_01_writer/servlet/DBSServlet

### To specify additional files to be put in InputSandBox
### write the full path  if the files are not in the current directory
### (wildcard * are allowed): comma separated list
#additional_input_files = GR_R_42_V19_AK5PF_Uncertainty.txt

#if server
#thresholdLevel = 100
#eMail = your@Email.address

[GRID]
#
## RB/WMS management:
rb = CERN

##  Black and White Lists management:
## By Storage
#se_black_list = T0,T1
#se_white_list =

## By ComputingElement
#ce_black_list = ce01.cmsaf.mit.edu,ce02.cmsaf.mit.edu,cmsgrid02.hep.wisc.edu,dc2-grid-66.brunel.ac.uk,osg-gw-2.t2.ucsd.edu,osg-gw-4.t2.ucsd.edu,pg.ihepa.ufl.edu,ce01.cmsaf.mit.edu,ce02.cmsaf.mit.edu,cream01.iihe.ac.be,dc2-grid-66.brunel.ac.uk,grcreamce01.inr.troitsk.ru,gridce01.ifca.es,heplnx206.pp.rl.ac.uk,heplnx207.pp.rl.ac.uk,heplnx208.pp.rl.ac.uk,ce02.cmsaf.mit.edu,ce01.cmsaf.mit.edu,cream01.iihe.ac.be,dc2-grid-70.brunel.ac.uk,heplnx208.pp.rl.ac.uk,osg.hpc.ufl.edu,osg-ce.sprace.org.br,red-gw1.unl.edu,red-gw2.unl.edu,red.unl.edu,cmsgrid01.hep.wisc.edu
#ce_black_list = osg-ce.sprace.org.br,red-gw1.unl.edu,red-gw2.unl.edu,red.unl.edu
#ce_white_list = grid.sinica.edu.tw

virtual_organization = cms

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

